digraph "a-main.c.251r.cse1" {
overlap=false;
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	subgraph cluster_23_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_23_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:955630225\ \ \ 26:\ L26:\l\
|\ \ \ 23:\ NOTE_INSN_BASIC_BLOCK\ 4\l\
|\ \ \ 24:\ \{r85:SI=r85:SI*r86:SI;clobber\ flags:CC;\}\l\
\ \ \ \ \ \ REG_UNUSED\ flags:CC\l\
|\ \ \ 25:\ \{r86:SI=r86:SI+0x1;clobber\ flags:CC;\}\l\
\ \ \ \ \ \ REG_UNUSED\ flags:CC\l\
|\ \ \ 27:\ flags:CCZ=cmp(r84:SI,r86:SI)\l\
|\ \ \ 28:\ pc=\{(flags:CCZ!=0)?L26:pc\}\l\
\ \ \ \ \ \ REG_DEAD\ flags:CCZ\l\
\ \ \ \ \ \ REG_BR_PROB\ 955630228\l\
}"];

	}
	fn_23_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_23_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_23_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:118111600\ \ \ \ 8:\ NOTE_INSN_BASIC_BLOCK\ 2\l\
|\ \ \ \ 2:\ NOTE_INSN_FUNCTION_BEG\l\
|\ \ \ \ 3:\ r89:DI=0x28\l\
|\ \ \ \ 4:\ \{[frame:DI-0x8]=unspec[[r89:DI]]\ 79;scratch=0;clobber\ flags:CC;\}\l\
\ \ \ \ \ \ REG_DEAD\ r89:DI\l\
\ \ \ \ \ \ REG_UNUSED\ flags:CC\l\
|\ \ \ 10:\ \{r90:DI=frame:DI-0xc;clobber\ flags:CC;\}\l\
\ \ \ \ \ \ REG_UNUSED\ flags:CC\l\
|\ \ \ 11:\ si:DI=r90:DI\l\
\ \ \ \ \ \ REG_EQUAL\ frame:DI-0xc\l\
\ \ \ \ \ \ REG_DEAD\ r90:DI\l\
|\ \ \ 12:\ r91:DI=`*.LC0'\l\
|\ \ \ 13:\ di:DI=r91:DI\l\
\ \ \ \ \ \ REG_DEAD\ r91:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC0'\l\
|\ \ \ 14:\ ax:QI=0\l\
|\ \ \ 15:\ ax:SI=call\ [`*__isoc99_scanf']\ argc:0\l\
\ \ \ \ \ \ REG_DEAD\ di:DI\l\
\ \ \ \ \ \ REG_DEAD\ si:DI\l\
\ \ \ \ \ \ REG_UNUSED\ ax:SI\l\
\ \ \ \ \ \ REG_CALL_DECL\ `*__isoc99_scanf'\l\
|\ \ \ 16:\ r87:SI=[frame:DI-0xc]\l\
|\ \ \ 19:\ flags:CCGC=cmp(r87:SI,0x1)\l\
|\ \ \ 20:\ pc=\{(flags:CCGC\<=0)?L54:pc\}\l\
\ \ \ \ \ \ REG_DEAD\ flags:CCGC\l\
\ \ \ \ \ \ REG_BR_PROB\ 118111604\l\
}"];

	fn_23_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:105119324\ \ \ 21:\ NOTE_INSN_BASIC_BLOCK\ 3\l\
|\ \ \ 22:\ \{r84:SI=r87:SI+0x1;clobber\ flags:CC;\}\l\
\ \ \ \ \ \ REG_DEAD\ r87:SI\l\
\ \ \ \ \ \ REG_UNUSED\ flags:CC\l\
|\ \ \ \ 5:\ r85:SI=0x1\l\
|\ \ \ \ 6:\ r86:SI=0x2\l\
}"];

	fn_23_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:12992276\ \ \ 54:\ L54:\l\
|\ \ \ 53:\ NOTE_INSN_BASIC_BLOCK\ 5\l\
|\ \ \ \ 7:\ r85:SI=0x1\l\
}"];

	fn_23_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:118111600\ \ \ 29:\ L29:\l\
|\ \ \ 30:\ NOTE_INSN_BASIC_BLOCK\ 6\l\
|\ \ \ 31:\ dx:SI=r85:SI\l\
\ \ \ \ \ \ REG_DEAD\ r85:SI\l\
|\ \ \ 32:\ r92:DI=`*.LC0'\l\
|\ \ \ 33:\ si:DI=r92:DI\l\
\ \ \ \ \ \ REG_DEAD\ r92:DI\l\
\ \ \ \ \ \ REG_EQUAL\ `*.LC0'\l\
|\ \ \ 34:\ di:SI=0x1\l\
|\ \ \ 35:\ ax:QI=0\l\
|\ \ \ 36:\ ax:SI=call\ [`__printf_chk']\ argc:0\l\
\ \ \ \ \ \ REG_DEAD\ di:SI\l\
\ \ \ \ \ \ REG_DEAD\ si:DI\l\
\ \ \ \ \ \ REG_DEAD\ dx:SI\l\
\ \ \ \ \ \ REG_UNUSED\ ax:SI\l\
\ \ \ \ \ \ REG_CALL_DECL\ `__printf_chk'\l\
|\ \ \ 37:\ r88:SI=0\l\
|\ \ \ 41:\ r94:DI=0x28\l\
|\ \ \ 42:\ \{flags:CCZ=unspec[[frame:DI-0x8],[r94:DI]]\ 80;clobber\ scratch;\}\l\
\ \ \ \ \ \ REG_DEAD\ r94:DI\l\
|\ \ \ 43:\ pc=\{(flags:CCZ==0)?L46:pc\}\l\
\ \ \ \ \ \ REG_DEAD\ flags:CCZ\l\
\ \ \ \ \ \ REG_BR_PROB\ 1073312332\l\
}"];

	fn_23_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:47245\ \ \ 55:\ NOTE_INSN_BASIC_BLOCK\ 7\l\
|\ \ \ 44:\ call\ [`__stack_chk_fail']\ argc:0\l\
\ \ \ \ \ \ REG_CALL_DECL\ `__stack_chk_fail'\l\
\ \ \ \ \ \ REG_ARGS_SIZE\ 0\l\
\ \ \ \ \ \ REG_NORETURN\ 0\l\
\ \ \ \ \ \ REG_EH_REGION\ 0\l\
}"];

	fn_23_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{COUNT:118064355\ \ \ 46:\ L46:\l\
|\ \ \ 56:\ NOTE_INSN_BASIC_BLOCK\ 8\l\
|\ \ \ 47:\ ax:SI=0\l\
\ \ \ \ \ \ REG_DEAD\ r88:SI\l\
|\ \ \ 48:\ use\ ax:SI\l\
}"];

	fn_23_basic_block_0:s -> fn_23_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_23_basic_block_2:s -> fn_23_basic_block_3:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[89%]"];
	fn_23_basic_block_2:s -> fn_23_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true,label="[11%]"];
	fn_23_basic_block_3:s -> fn_23_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_23_basic_block_4:s -> fn_23_basic_block_4:n [style="dotted,bold",color=blue,weight=10,constraint=false,label="[89%]"];
	fn_23_basic_block_4:s -> fn_23_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[11%]"];
	fn_23_basic_block_5:s -> fn_23_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_23_basic_block_6:s -> fn_23_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true,label="[99%]"];
	fn_23_basic_block_6:s -> fn_23_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[0%]"];
	fn_23_basic_block_8:s -> fn_23_basic_block_1:n [style="solid,bold",color=blue,weight=100,constraint=true,label="[100%]"];
	fn_23_basic_block_0:s -> fn_23_basic_block_1:n [style="invis",constraint=true];
}
}
