
;; Function main (main, funcdef_no=23, decl_uid=2545, cgraph_uid=24, symbol_order=23) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 11 (  1.1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 6 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 9 8 }
;; 8 succs { }
;; 9 succs { 1 }
Removing SCRATCH to p96 in insn #4 (nop 2)
rescanning insn with uid = 4.
Removing SCRATCH to p97 in insn #42 (nop 3)
rescanning insn with uid = 42.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 10 n_edges 11 count 11 (  1.1)
Reg 95 uninteresting
Reg 87 uninteresting
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 6 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 9 8 }
;; 8 succs { }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 95: (insn_list:REG_DEP_TRUE 12 (nil))
Reg 90 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a0 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r95,l1) best SIREG, allocno SIREG
    a1 (r95,l0) best SIREG, allocno SIREG
    a6 (r90,l0) best SIREG, allocno SIREG
    a5 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r86,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r85,l1) best DREG, allocno DREG
    a2 (r85,l0) best DREG, allocno DREG
    a8 (r84,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a1(r95,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:110,110 DIREG:440,440 AD_REGS:440,440 CLOBBERED_REGS:440,440 Q_REGS:440,440 NON_Q_REGS:440,440 TLS_GOTBASE_REGS:440,440 GENERAL_REGS:440,440 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:3960,3960 INT_SSE_REGS:3960,3960 ALL_REGS:58080,58080 MEM:1870,1870
  a2(r85,l0) costs: AREG:220,220 DREG:-110,-110 CREG:220,220 BREG:220,220 SIREG:220,220 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1314,11994 NO_REX_SSE_REGS:1314,11994 SSE_REGS:1314,11994 MMX_REGS:2084,25224 INT_SSE_REGS:2084,25224 ALL_REGS:34220,411580 MEM:769,11449
  a3(r86,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:582,21942 NO_REX_SSE_REGS:582,21942 SSE_REGS:582,21942 MMX_REGS:582,44192 INT_SSE_REGS:582,44192 ALL_REGS:9700,668300 MEM:97,17897
  a4(r84,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:582,5922 NO_REX_SSE_REGS:582,5922 SSE_REGS:582,5922 MMX_REGS:1261,12831 INT_SSE_REGS:1261,12831 ALL_REGS:20564,209244 MEM:485,4935
  a5(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1902,1902 NO_REX_SSE_REGS:1902,1902 SSE_REGS:1902,1902 MMX_REGS:3720,3720 INT_SSE_REGS:3720,3720 ALL_REGS:45068,45068 MEM:1695,1695
  a6(r90,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:-110,-110 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1320,1320 NO_REX_SSE_REGS:1320,1320 SSE_REGS:1320,1320 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1320,1320
  a7(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a8(r84,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5340,5340 NO_REX_SSE_REGS:5340,5340 SSE_REGS:5340,5340 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:4450,4450
  a9(r85,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:10680,10680
  a10(r86,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:43610,43610 INT_SSE_REGS:43610,43610 ALL_REGS:658600,658600 MEM:17800,17800
  a11(r95,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r95,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r85: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r85,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r97,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a1(r95,l0) costs: AREG:880,880 DREG:880,880 CREG:880,880 BREG:880,880 SIREG:440,110 DIREG:880,880 AD_REGS:880,880 CLOBBERED_REGS:440,440 Q_REGS:880,880 NON_Q_REGS:440,440 TLS_GOTBASE_REGS:440,440 GENERAL_REGS:440,440 SSE_FIRST_REG:3300,3300 NO_REX_SSE_REGS:3300,3300 SSE_REGS:3300,3300 MMX_REGS:7150,7150 INT_SSE_REGS:4290,4290 ALL_REGS:58740,58740 MEM:3300,3300
  a2(r85,l0) costs: AREG:440,440 DREG:220,-110 CREG:440,440 BREG:440,440 SIREG:440,440 DIREG:440,440 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:440,440 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1974,12654 NO_REX_SSE_REGS:1974,12654 SSE_REGS:1974,12654 MMX_REGS:4168,27308 INT_SSE_REGS:2738,25878 ALL_REGS:34874,412234 MEM:1974,12654
  a3(r86,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:582,21942 NO_REX_SSE_REGS:582,21942 SSE_REGS:582,21942 MMX_REGS:1164,47444 INT_SSE_REGS:1164,47444 ALL_REGS:10282,674222 MEM:582,18382
  a4(r84,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:582,5922 NO_REX_SSE_REGS:582,5922 SSE_REGS:582,5922 MMX_REGS:1261,12831 INT_SSE_REGS:1261,12831 ALL_REGS:20564,209244 MEM:485,4935
  a5(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1902,1902 NO_REX_SSE_REGS:1902,1902 SSE_REGS:1902,1902 MMX_REGS:4121,4121 INT_SSE_REGS:4121,4121 ALL_REGS:46310,46310 MEM:1695,1695
  a6(r90,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:220,-110 DIREG:440,440 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1980,1980 NO_REX_SSE_REGS:1980,1980 SSE_REGS:1980,1980 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1980,1980
  a7(r96,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:660,660 NO_REX_SSE_REGS:660,660 SSE_REGS:660,660 MMX_REGS:1430,1430 INT_SSE_REGS:1430,1430 ALL_REGS:23320,23320 MEM:660,660
  a8(r84,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5340,5340 NO_REX_SSE_REGS:5340,5340 SSE_REGS:5340,5340 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:4450,4450
  a9(r85,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10680,10680 NO_REX_SSE_REGS:10680,10680 SSE_REGS:10680,10680 MMX_REGS:23140,23140 INT_SSE_REGS:23140,23140 ALL_REGS:377360,377360 MEM:10680,10680
  a10(r86,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:46280,46280 INT_SSE_REGS:46280,46280 ALL_REGS:663940,663940 MEM:17800,17800
  a11(r95,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0

   Insn 48(l0): point = 0
   Insn 47(l0): point = 2
   Insn 44(l0): point = 5
   Insn 43(l0): point = 8
   Insn 42(l0): point = 10
   Insn 36(l0): point = 12
   Insn 35(l0): point = 14
   Insn 34(l0): point = 16
   Insn 33(l0): point = 18
   Insn 31(l0): point = 20
   Insn 7(l0): point = 23
   Insn 63(l0): point = 26
   Insn 6(l0): point = 29
   Insn 5(l0): point = 31
   Insn 22(l0): point = 33
   Insn 20(l0): point = 36
   Insn 19(l0): point = 38
   Insn 16(l0): point = 40
   Insn 15(l0): point = 42
   Insn 14(l0): point = 44
   Insn 13(l0): point = 46
   Insn 12(l0): point = 48
   Insn 11(l0): point = 50
   Insn 10(l0): point = 52
   Insn 4(l0): point = 54
   Insn 28(l1): point = 57
   Insn 27(l1): point = 59
   Insn 25(l1): point = 61
   Insn 24(l1): point = 63
 a0(r97): [10..10]
 a1(r95): [19..48]
 a2(r85): [26..31] [21..23]
 a3(r86): [29..29]
 a4(r84): [29..33]
 a5(r87): [34..40]
 a6(r90): [51..52]
 a7(r96): [54..54]
 a8(r84): [57..65]
 a9(r85): [57..65]
 a10(r86): [57..65]
 a11(r95): [57..65]
      Moving ranges of a11r95 to a1r95:  [57..65]
      Moving ranges of a10r86 to a3r86:  [57..65]
      Moving ranges of a9r85 to a2r85:  [57..65]
      Moving ranges of a8r84 to a4r84:  [57..65]
Compressing live ranges: from 66 to 13 - 19%
Ranges after the compression:
 a0(r97): [0..0]
 a1(r95): [11..12] [1..7]
 a2(r85): [11..12] [1..5]
 a3(r86): [11..12] [4..4]
 a4(r84): [11..12] [4..5]
 a5(r87): [6..7]
 a6(r90): [8..9]
 a7(r96): [10..10]
+++Allocating 56 bytes for conflict table (uncompressed size 96)
;; a0(r97,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r95,l0) conflicts: a2(r85,l0) a3(r86,l0) a4(r84,l0) a5(r87,l0)
;;     total conflict hard regs: 0-1 4
;;     conflict hard regs: 0-1 4

;; a2(r85,l0) conflicts: a1(r95,l0) a3(r86,l0) a4(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r86,l0) conflicts: a1(r95,l0) a2(r85,l0) a4(r84,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r84,l0) conflicts: a1(r95,l0) a2(r85,l0) a3(r86,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r87,l0) conflicts: a1(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r90,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r96,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a4(r84)<->a5(r87)@12:shuffle
  pref0:a1(r95)<-hr4@165
  pref1:a6(r90)<-hr4@165
  pref2:a2(r85)<-hr1@165
  regions=2, blocks=10, points=13
    allocnos=12 (big 0), copies=1, conflicts=0, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 9 8 7 6 5 4 3 2
    all: 0r97 1r95 2r85 3r86 4r84 5r87 6r90 7r96
    modified regnos: 84 85 86 87 90 95 96 97
    border:
    Pressure: GENERAL_REGS=4
 Removing pref0:hr4@165
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@82372
          2:( 2-3 5-6 36-43)@5720
      Allocno a0r97 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a1r95 of GENERAL_REGS(15) has 12 avail. regs  2-3 5-6 36-43, node:  2-3 5-6 36-43 (confl regs =  0-1 4 7-35 44-75)
      Allocno a2r85 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a3r86 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a4r84 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a5r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a6r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a7r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Forming thread from colorable bucket:
        Forming thread by copy 0:a4r84-a5r87 (freq=12):
          Result (freq=1304): a4r84(987) a5r87(317)
      Pushing a7(r96,l0)(cost 0)
      Pushing a0(r97,l0)(cost 0)
      Pushing a6(r90,l0)(cost 0)
      Pushing a1(r95,l0)(cost 0)
      Pushing a5(r87,l0)(cost 0)
      Pushing a4(r84,l0)(cost 0)
      Pushing a2(r85,l0)(cost 0)
      Pushing a3(r86,l0)(cost 0)
      Popping a3(r86,l0)  --         assign reg 0
      Popping a2(r85,l0)  --         assign reg 1
      Popping a4(r84,l0)  --         assign reg 2
      Popping a5(r87,l0)  --         assign reg 2
      Popping a1(r95,l0)  --         assign reg 6
      Popping a6(r90,l0)  --         assign reg 4
      Popping a0(r97,l0)  --         assign reg 0
      Popping a7(r96,l0)  --         assign reg 0
Disposition:
    4:r84  l0     2    2:r85  l0     1    3:r86  l0     0    5:r87  l0     2
    6:r90  l0     4    1:r95  l0     6    7:r96  l0     0    0:r97  l0     0
New iteration of spill/restore move
+++Costs: overall 220, reg 220, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,4u} r1={5d,1u} r2={4d} r4={6d,2u} r5={6d,2u} r6={1d,9u} r7={1d,12u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,8u} r17={11d,3u} r18={3d} r19={1d,13u,2e} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r84={1d,1u} r85={3d,2u} r86={2d,3u} r87={1d,2u} r90={1d,1u} r95={1d,2u} r96={1d} r97={1d} 
;;    total ref usage 314{247d,65u,2e} in 29{26 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 2 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [2 D.2574+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 96)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":3:1 1159 {stack_protect_set_1_di}
     (expr_list:REG_UNUSED (reg:DI 96)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 10 4 11 2 (parallel [
            (set (reg/f:DI 90)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":5:2 210 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg/f:DI 90)) "main.c":5:2 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 95)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fe8c2be3090 *.LC0>)) "main.c":5:2 74 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fe8c2be3090 *.LC0>)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 95)) "main.c":5:2 74 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fe8c2be3090 *.LC0>)
        (nil)))
(insn 14 13 15 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":5:2 77 {*movqi_internal}
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fe8c2abed00 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "main.c":5:2 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fe8c2abed00 scanf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 16 15 19 2 (set (reg:SI 87 [ n.0_12 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])) "main.c":8:11 75 {*movsi_internal}
     (nil))
(insn 19 16 20 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ n.0_12 ])
            (const_int 1 [0x1]))) "main.c":8:11 11 {*cmpsi_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 54)
            (pc))) "main.c":8:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 54)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 5 3 (parallel [
            (set (reg:SI 84 [ _6 ])
                (plus:SI (reg:SI 87 [ n.0_12 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ n.0_12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 5 22 6 3 (set (reg/v:SI 85 [ f ])
        (const_int 1 [0x1])) "main.c":7:4 75 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 6 5 26 3 (set (reg/v:SI 86 [ i ])
        (const_int 2 [0x2])) "main.c":6:4 75 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
(code_label 26 6 23 4 3 (nil) [1 uses])
(note 23 26 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (parallel [
            (set (reg/v:SI 85 [ f ])
                (mult:SI (reg/v:SI 85 [ f ])
                    (reg/v:SI 86 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":10:5 408 {*mulsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 25 24 27 4 (parallel [
            (set (reg/v:SI 86 [ i ])
                (plus:SI (reg/v:SI 86 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":11:5 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 25 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ _6 ])
            (reg/v:SI 86 [ i ]))) "main.c":8:11 11 {*cmpsi_1}
     (nil))
(jump_insn 28 27 62 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 26)
            (pc))) "main.c":8:11 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 26)
(note 62 28 63 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 63 62 64 5 (set (pc)
        (label_ref 29)) 807 {jump}
     (nil)
 -> 29)
(barrier 64 63 54)
(code_label 54 64 53 6 5 (nil) [1 uses])
(note 53 54 7 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 7 53 29 6 (set (reg/v:SI 85 [ f ])
        (const_int 1 [0x1])) "main.c":7:4 75 {*movsi_internal}
     (nil))
(code_label 29 7 30 7 2 (nil) [1 uses])
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 33 7 (set (reg:SI 1 dx)
        (reg/v:SI 85 [ f ])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 85 [ f ])
        (nil)))
(insn 33 31 34 7 (set (reg:DI 4 si)
        (reg/f:DI 95)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fe8c2be3090 *.LC0>)
            (nil))))
(insn 34 33 35 7 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 75 {*movsi_internal}
     (nil))
(insn 35 34 36 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 77 {*movqi_internal}
     (nil))
(call_insn 36 35 42 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fe8c2ae6c00 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":112:10 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fe8c2ae6c00 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 42 36 43 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [2 D.2574+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 97))
        ]) "main.c":14:1 1164 {stack_protect_test_1_di}
     (expr_list:REG_UNUSED (reg:DI 97)
        (nil)))
(jump_insn 43 42 55 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "main.c":14:1 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 46)
(note 55 43 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 44 55 45 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fe8c2bdb800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":14:1 813 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fe8c2bdb800 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 45 44 46)
(code_label 46 45 56 9 4 (nil) [1 uses])
(note 56 46 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 56 48 9 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "main.c":14:1 75 {*movsi_internal}
     (nil))
(insn 48 47 0 9 (use (reg/i:SI 0 ax)) "main.c":14:1 -1
     (nil))
